install.packages("e1071")
install.packages("caTools")
install.packages("class")
install.packages('plyr')
install.packages('dplyr')
install.packages("ClusterR")
install.packages("cluster")
# Loading package
library(e1071)
library(caTools)
library(class)
library(plyr)
library(dplyr)
library(ClusterR)
library(cluster)


# Loading data
data = read.csv("C:/Users/raiai/OneDrive - Seneca/COURSE/BDM 300/diabetes.csv")
head(data)

summary(data)
#Diabetes Outcome
# Yes = 1
# No = 0


#Frequency table

glucose = as.data.frame(table(data$Glucose))
bp = as.data.frame(table(data$BloodPressure))
bmi = as.data.frame(table(data$BMI))
age = as.data.frame(table(data$Age))

#Couning null values
table(is.na.data.frame(data))

# Outlier filtering
stan_dev = sd(data$Glucose)
mean = mean(data$Glucose)
new = data %>% filter( between(Glucose, mean+stan_dev, mean-stan_dev))

# Splitting data into train
# and test data (train =70% , test= 30%)
split <- sample.split(data, SplitRatio = 0.7)
train_cl <- subset(data, split == "TRUE")
test_cl <- subset(data, split == "FALSE")

# Feature Scaling
train_scale <- scale(train_cl[, 1:4])
test_scale <- scale(test_cl[, 1:4])

#KNN Model 
classifier_knn <- knn(train = train_scale,
                      test = test_scale,
                      cl = train_cl$Outcome,
                      k = 1)
classifier_knn

# Confusiin Matrix
cm <- table(test_cl$Outcome, classifier_knn)
cm

# Model Evaluation - Choosing K
# Calculate out of Sample error
error <- mean(classifier_knn != test_cl$Outcome)
print(paste('Accuracy =', (1-error)*100, '%'))

# K = 5
classifier_knn <- knn(train = train_scale,
                      test = test_scale,
                      cl = train_cl$Outcome,
                      k = 5)
error <- mean(classifier_knn != test_cl$Outcome)
print(paste('Accuracy =', (1-error)*100, '%'))



